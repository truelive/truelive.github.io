<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-08-20T23:56:17+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">truelive’s pages</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Git and Linux Cheatsheet</title><link href="http://localhost:4000/2022/07/21/git-and-linux-cheatsheet.html" rel="alternate" type="text/html" title="Git and Linux Cheatsheet" /><published>2022-07-21T19:40:38+03:00</published><updated>2022-07-21T19:40:38+03:00</updated><id>http://localhost:4000/2022/07/21/git-and-linux-cheatsheet</id><content type="html" xml:base="http://localhost:4000/2022/07/21/git-and-linux-cheatsheet.html"><![CDATA[<p>This page serves only for personal use only and inteded to be used as a helper to remember some workcases. Please be aware of what you copying, this might not work for you.</p>

<ul>
  <li>checkout to previous branch
    <ul>
      <li><code class="language-plaintext highlighter-rouge">git checkout -</code></li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">git push -u origin branch-name</code></li>
  <li>set up Intellij Idea as a diff tool
    <ul>
      <li>
        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[diff]
  tool = intellij
  guitool = intellij
[difftool "intellij"]
  path = C:/Program Files/JetBrains/IntelliJ IDEA Community Edition 2020.1.1/bin/idea.bat
  cmd = cmd \"/C D:\\workspace\\tools\\symlink\\idea\\bin\\idea.bat diff $(cd $(dirname "$LOCAL") &amp;&amp; pwd)/$(basename "$LOCAL") $(cd $(dirname "$REMOTE") &amp;&amp; pwd)/$(basename "$REMOTE")\"
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li>turn on autocorrect for commands <code class="language-plaintext highlighter-rouge">git config --global help.autocorrect 1</code></li>
  <li>prune(clear the db from unreachable ibjects) on each pull <code class="language-plaintext highlighter-rouge">git config --global fetch.prune true</code></li>
  <li>get filenames of changed files
    <ul>
      <li><code class="language-plaintext highlighter-rouge">git diff HEAD --name-only</code></li>
      <li><code class="language-plaintext highlighter-rouge">git status -s | cut -d' ' -f 3</code></li>
    </ul>
  </li>
  <li>get filenames of files that are changed when comparing to another branch
    <ul>
      <li><code class="language-plaintext highlighter-rouge">git diff release1...HEAD</code> - three dots show relative diff, uncommited files are not included. Basically reads “What have been modified in HEAD(current branch) in comparassion to release1?”
        <ul>
          <li>This helps making patches to a certain files\folders when cherry-pick or merge isn’t an option</li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">git diff release1...HEAD | xargs -i@ git checkout release1 -- @</code> reverts files to original state (considering release1 contains original) to working tree. If chained with filtering it is</li>
    </ul>
  </li>
  <li>find a revision with certain changes
    <ul>
      <li><code class="language-plaintext highlighter-rouge">git rev-list -–all | xargs git grep -F 'pattern'</code></li>
    </ul>
  </li>
  <li>make a commit without any changes <code class="language-plaintext highlighter-rouge">git commit --allow empty -m 'new empty commit</code></li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[This page serves only for personal use only and inteded to be used as a helper to remember some workcases. Please be aware of what you copying, this might not work for you.]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/2022/07/13/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2022-07-13T15:49:38+03:00</published><updated>2022-07-13T15:49:38+03:00</updated><id>http://localhost:4000/2022/07/13/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/2022/07/13/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry></feed>